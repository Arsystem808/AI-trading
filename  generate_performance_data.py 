# -*- coding: utf-8 -*-
# generate_performance_data.py ‚Äî –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤

import pandas as pd
import numpy as np
from datetime import datetime, timedelta
from pathlib import Path

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É
Path("performance_data").mkdir(exist_ok=True)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
agents = ["Octopus", "W7", "M7", "Global", "AlphaPulse"]
tickers = ["SPY", "QQQ", "BTCUSD", "ETHUSD"]
days = 90

print("üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n")

for agent in agents:
    for ticker in tickers:
        # –î–∞—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π
        end_date = datetime.now()
        start_date = end_date - timedelta(days=days)
        dates = pd.date_range(start=start_date, end=end_date, freq='D')
        
        # –°–ª—É—á–∞–π–Ω—ã–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ (–Ω–µ–±–æ–ª—å—à–æ–π —Ç—Ä–µ–Ω–¥ –≤–≤–µ—Ä—Ö)
        np.random.seed(hash(f"{agent}{ticker}") % 100000)
        daily_returns = np.random.normal(0.002, 0.015, len(dates))
        
        # –ö—É–º—É–ª—è—Ç–∏–≤–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
        cumulative = (1 + pd.Series(daily_returns)).cumprod() - 1
        
        # DataFrame
        df = pd.DataFrame({
            'date': dates.strftime('%Y-%m-%d'),
            'agent': agent,
            'ticker': ticker,
            'daily_return': daily_returns,
            'cumulative_return': cumulative.values
        })
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        filename = f"performance_data/performance_{agent}_{ticker}.csv"
        df.to_csv(filename, index=False)
        print(f"‚úÖ {filename}")

print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {len(agents) * len(tickers)} —Ñ–∞–π–ª–æ–≤!")
print("\nüìä –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏: streamlit run app.py")
