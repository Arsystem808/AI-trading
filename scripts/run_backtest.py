#!/usr/bin/env python3
"""Simple backtest runner for Octopus"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent.parent))

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
POLYGON_API_KEY = os.getenv('POLYGON_API_KEY')
if not POLYGON_API_KEY:
    raise ValueError(
        "POLYGON_API_KEY environment variable is not set. "
        "Please ensure it's configured in GitHub Actions secrets."
    )

# –î–ª—è –æ—Ç–ª–∞–¥–∫–∏: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –∫–ª—é—á–∞
print(f"Using API key: {POLYGON_API_KEY[:8]}***")

from core.strategy import analyze_asset_global

TICKERS = ["btcusd", "ethusd"]

def run_backtest():
    print("\nüöÄ Starting Octopus backtest...\n")
    
    for ticker in TICKERS:
        print(f"üìä Testing {ticker.upper()}")
        try:
            result = analyze_asset_global(ticker, "–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π")
            action = result["recommendation"]["action"]
            conf = result["recommendation"]["confidence"]
            print(f"  ‚úÖ Global: {action} (confidence: {conf:.2f})")
        except Exception as e:
            print(f"  ‚ùå Error: {e}")
    
    print("\n‚úÖ Backtest complete!\n")

if __name__ == "__main__":
    run_backtest()
