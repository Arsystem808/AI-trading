# .github/workflows/etl_schedule.yml
name: ETL Production Run

on:
  schedule:
    - cron: "5 5 * * *"   # 05:05 UTC
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency:
  group: etl-prod
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  etl:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Install runtime deps
        run: |
          set -euo pipefail
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install ".[etl]" || true; fi

      - name: Compute paths
        run: |
          set -euo pipefail
          ART_DIR="${GITHUB_WORKSPACE}/artifacts-etl"
          echo "ARTIFACTS_DIR=$ART_DIR" >> "$GITHUB_ENV"
          mkdir -p "$ART_DIR"

      - name: Configure AWS (OIDC)
        if: ${{ secrets.AWS_ROLE_ARN != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION || 'eu-central-1' }}

      - name: Run ETL
        env:
          ETL_ENV: prod
          DB_URL: ${{ secrets.DB_URL }}
          API_KEY: ${{ secrets.API_KEY }}
          ARTIFACTS_DIR: ${{ env.ARTIFACTS_DIR }}
        run: |
          set -euo pipefail
          LOG="${ARTIFACTS_DIR}/run.log"
          echo "run_id=${GITHUB_RUN_ID} started=$(date -Is)" | tee "$LOG" >/dev/null
          python -m core.etl.transform 2>&1 | tee -a "$LOG"

      - name: Collect outputs
        if: always()
        env:
          ARTIFACTS_DIR: ${{ env.ARTIFACTS_DIR }}
        run: |
          set -euo pipefail
          mkdir -p "${ARTIFACTS_DIR}"
          for d in logs output data; do
            if [ -d "$d" ]; then rsync -a "$d"/ "${ARTIFACTS_DIR}/$d"/; fi
          done

      - name: List artifacts
        if: always()
        env:
          ARTIFACTS_DIR: ${{ env.ARTIFACTS_DIR }}
        run: |
          echo "Artifacts at: ${ARTIFACTS_DIR}"
          ls -la "${ARTIFACTS_DIR}" || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: etl-run-${{ github.run_id }}
          path: ${{ env.ARTIFACTS_DIR }}/
          if-no-files-found: warn
          include-hidden-files: true
