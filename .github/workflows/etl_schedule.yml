# .github/workflows/etl_schedule.yml
name: ETL Production Run

on:
  schedule:
    - cron: "5 5 * * *"     # каждый день 05:05 UTC
  workflow_dispatch:        # ручной запуск из UI

permissions:
  contents: read
  id-token: write           # для OIDC, если используете облако

concurrency:
  group: etl-prod
  cancel-in-progress: true  # не допускать наложения ETL-запусков

jobs:
  etl:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Install runtime deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install ".[etl]" || true; fi

      # Опционально: AWS OIDC (если нужен доступ к S3/RS/Athena/Glue и т.п.)
      - name: Configure AWS (OIDC)
        if: env.AWS_ROLE_ARN != ''
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION || 'eu-central-1' }}

      - name: Run ETL
        env:
          ETL_ENV: prod
          # пример секретов: строки подключения/токены
          DB_URL: ${{ secrets.DB_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          set -euo pipefail
          python -m core.etl.transform

      - name: Collect logs
        if: always()
        run: |
          mkdir -p artifacts
          cp -R logs/* artifacts/ 2>/dev/null || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: etl-run-${{ github.run_id }}
          path: artifacts
