name: Reusable ETL

on:
  workflow_call:
    inputs:
      env:
        description: "Target environment"
        type: string
        required: false
        default: "dev"
      command:
        description: "ETL entrypoint command"
        type: string
        required: false
        default: "python -m core.etl.transform"
      workdir:
        description: "Рабочая директория (если код не в корне)"
        type: string
        required: false
        default: "."
    secrets:
      DB_URL:
        required: false
      API_KEY:
        required: false
      AWS_ROLE_ARN:
        required: false
      POLYGON_API_KEY:
        required: false

permissions:
  contents: read

jobs:
  etl:
    runs-on: ubuntu-latest
    env:
      ENV: ${{ inputs.env }}
      WORKDIR: ${{ inputs.workdir }}
      DB_URL: ${{ secrets.DB_URL }}
      API_KEY: ${{ secrets.API_KEY }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Compute paths
        run: |
          set -euo pipefail
          WD="${WORKDIR:-.}"
          ART_DIR="${GITHUB_WORKSPACE}/${WD#/}/artifacts"
          echo "WORKDIR_NORM=$WD" >> "$GITHUB_ENV"
          echo "ARTIFACTS_DIR=$ART_DIR" >> "$GITHUB_ENV"
          mkdir -p "$ART_DIR"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyarrow
        working-directory: ${{ env.WORKDIR_NORM }}

      - name: Verify tree
        run: |
          echo "ENV='${ENV}'"
          echo "WORKDIR='${WORKDIR_NORM}'"
          pwd
          ls -la | sed -n '1,200p'
        working-directory: ${{ env.WORKDIR_NORM }}

      - name: Run ETL
        run: |
          set -euo pipefail
          test -n "${POLYGON_API_KEY:-}" || echo "WARN: POLYGON_API_KEY is empty"
          eval "${{ inputs.command }}"
        working-directory: ${{ env.WORKDIR_NORM }}

      - name: List workspace and artifacts
        if: always()
        run: |
          echo "Workspace listing:" && ls -la
          echo "Artifacts listing (${ARTIFACTS_DIR}):" && ls -la "${ARTIFACTS_DIR}" || echo "No artifacts dir yet"

      - name: Upload ETL artifacts
        uses: actions/upload-artifact@v4
        with:
          name: etl-artifacts-${{ github.run_id }}
          path: ${{ env.ARTIFACTS_DIR }}/
          if-no-files-found: error
          include-hidden-files: true
