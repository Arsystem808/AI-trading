name: Nightly Training

on:
  schedule:
    - cron: "0 2 * * *"   # каждый день в 02:00 UTC
  workflow_dispatch: {}

concurrency:
  group: nightly-training-${{ github.ref }}
  cancel-in-progress: true

jobs:
  train:
    runs-on: ubuntu-latest
    env:
      POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
      SYMBOLS: "BTCUSD ETHUSD"
      START_DATE: "2019-01-01"
      EPOCHS: "12"   # гарантируем непустой --epochs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check merge-conflict markers
        shell: bash
        run: |
          if git grep -n '<<<<<<<\|=======\|>>>>>>>' -- . >/dev/null; then
            echo "Unresolved merge markers found"
            git grep -n '<<<<<<<\|=======\|>>>>>>>' -- . || true
            exit 1
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            **/requirements*.txt

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # минимальный набор для тренера и загрузчика
          pip install pandas numpy scikit-learn joblib requests

      - name: Set END_DATE (UTC today)
        shell: bash
        run: |
          echo "END_DATE=$(date -u +%F)" >> "$GITHUB_ENV"

      - name: Train M7 (all symbols)
        shell: bash
        run: |
          set -e
          for SYM in $SYMBOLS; do
            echo "=== Train for $SYM ==="
            python scripts/train.py \
              --symbol "$SYM" \
              --start  "$START_DATE" \
              --end    "$END_DATE" \
              --epochs "$EPOCHS" \
              --artifacts-dir "artifacts/${SYM}" \
              --models-dir    "models" \
              --configs-dir   "configs"
          done

      - name: Calibrate confidence
        shell: bash
        run: |
          # Скрипт должен писать итог в configs/calibration.json
          python scripts/calibrate_confidence.py

      - name: Train Octopus meta (optional)
        shell: bash
        run: |
          python scripts/train_octopus_meta.py || echo "meta optional"

      - name: Sanitize filenames (no colons)
        shell: bash
        run: |
          for dir in models artifacts; do
            if [ -d "$dir" ]; then
              find "$dir" -type f -name '*:*' -print0 | while IFS= read -r -d '' f; do
                nf="${f//:/_}"
                mkdir -p "$(dirname "$nf")"
                mv "$f" "$nf"
              done
            fi
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: models-and-calibration
          path: |
            models/**
            configs/**/*.json
            artifacts/**
          if-no-files-found: warn
          retention-days: 7
