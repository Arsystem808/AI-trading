name: ETL

on:
  workflow_dispatch:
    inputs:
      etl_path:
        description: "File path or module (e.g., pipelines/etl/daily_etl.py или pipelines.etl.daily_etl)"
        required: false
        default: ""
      workdir:
        description: "Рабочая директория (если код не в корне)"
        required: false
        default: ""
  schedule:
    - cron: "0 5 * * *"

defaults:
  run:
    shell: bash

env:
  POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
  ETL_PATH_RAW: ${{ github.event.inputs.etl_path }}
  WORKDIR: ${{ github.event.inputs.workdir }}

permissions:
  contents: read

jobs:
  etl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute paths
        run: |
          set -euo pipefail
          WD="${WORKDIR:-.}"
          ART_DIR="${GITHUB_WORKSPACE}/${WD#/}/artifacts"
          echo "WORKDIR_NORM=$WD" >> "$GITHUB_ENV"
          echo "ARTIFACTS_DIR=$ART_DIR" >> "$GITHUB_ENV"
          mkdir -p "$ART_DIR"
          echo "Artifacts will be saved to: $ART_DIR"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyarrow
        working-directory: ${{ env.WORKDIR_NORM }}

      - name: Verify tree
        run: |
          echo "WORKDIR='${WORKDIR_NORM}'"
          echo "ETL_PATH_RAW='${ETL_PATH_RAW:-<empty>}'"
          pwd
          ls -R . | head -n 200
        working-directory: ${{ env.WORKDIR_NORM }}

      - name: Resolve ETL entrypoint
        id: resolve
        run: |
          set -euo pipefail
          ETL_IN="$(printf '%s' "${ETL_PATH_RAW}" | tr -d '\r' | sed 's/^"//;s/"$//;s/^[[:space:]]*//;s/[[:space:]]*$//')"
          if [ -n "$ETL_IN" ]; then
            if [ -f "$ETL_IN" ]; then
              echo "ETL_FILE=$ETL_IN" >> "$GITHUB_ENV"
              exit 0
            fi
            if [[ "$ETL_IN" =~ ^[A-Za-z0-9_.]+$ && "$ETL_IN" != */* ]]; then
              echo "ETL_MODULE=$ETL_IN" >> "$GITHUB_ENV"
              exit 0
            fi
            echo "Provided etl_path='$ETL_IN' not found in WORKDIR='${WORKDIR_NORM}'" >&2
            exit 2
          fi
          for c in pipelines/etl/daily_etl.py scripts/etl.py etl.py; do
            [ -f "$c" ] && echo "ETL_FILE=$c" >> "$GITHUB_ENV" && exit 0
          done
          echo "ETL entrypoint not found" >&2
          exit 2
        working-directory: ${{ env.WORKDIR_NORM }}

      - name: Run ETL
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          set -euo pipefail
          test -n "${POLYGON_API_KEY:-}" || { echo "POLYGON_API_KEY is not set"; exit 1; }

          if [ -n "${ETL_MODULE:-}" ]; then
            python -m "${ETL_MODULE}"
            exit $?
          fi

          if [ -n "${ETL_FILE:-}" ]; then
            MOD="$(echo "$ETL_FILE" | sed 's|^./||;s|/|.|g;s|\.py$||')"
            if python -m "$MOD" --help >/dev/null 2>&1; then
              python -m "$MOD"
              exit $?
            fi
            echo "PYTHONPATH=$GITHUB_WORKSPACE" >> "$GITHUB_ENV"
            PYTHONPATH="$GITHUB_WORKSPACE:${PYTHONPATH:-}" python "$ETL_FILE"
            exit $?
          fi

          echo "No ETL entrypoint resolved"
          exit 2
        working-directory: ${{ env.WORKDIR_NORM }}

      - name: List workspace and artifacts
        if: always()
        run: |
          echo "Workspace listing:" && ls -la
          echo "Artifacts listing (${ARTIFACTS_DIR}):" && ls -la "${ARTIFACTS_DIR}" || echo "No artifacts dir yet"

      - name: Upload ETL artifacts
        uses: actions/upload-artifact@v4
        with:
          name: etl-artifacts-${{ github.run_id }}
          path: ${{ env.ARTIFACTS_DIR }}/
          if-no-files-found: error
          include-hidden-files: true
