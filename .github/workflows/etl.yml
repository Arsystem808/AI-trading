# .github/workflows/etl.yml
name: ETL

on:
  workflow_dispatch:
    inputs:
      etl_path:
        description: "Relative path to ETL script (e.g., scripts/etl.py or etl/runner.py)"
        required: false
        default: ""
        type: string
      workdir:
        description: "Working directory (monorepo subfolder, e.g., ai-trading)"
        required: false
        default: ""
        type: string
  schedule:
    - cron: "0 5 * * *"

jobs:
  etl:
    runs-on: ubuntu-latest
    env:
      POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
      ETL_PATH: ${{ inputs.etl_path }}
      WORKDIR: ${{ inputs.workdir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -n "${WORKDIR:-}" ] && [ -f "${WORKDIR}/requirements.txt" ]; then pip install -r "${WORKDIR}/requirements.txt"; fi

      - name: Verify tree
        shell: bash
        run: |
          echo "WORKDIR='${WORKDIR:-.}'"
          echo "ETL_PATH='${ETL_PATH:-<auto>}'"
          pwd
          ls -la
          if [ -n "${WORKDIR:-}" ]; then ls -la "${WORKDIR}" || true; fi
          find "${WORKDIR:-.}" -maxdepth 4 -type f -name 'etl.py' -print || true

      - name: Resolve ETL path
        id: resolve
        shell: bash
        run: |
          set -euo pipefail
          cd "${WORKDIR:-.}"

          # 1) If input path provided, validate it
          if [ -n "${ETL_PATH:-}" ]; then
            if [ -f "${ETL_PATH}" ]; then
              echo "ETL_FILE=${ETL_PATH}" >> "$GITHUB_ENV"
              echo "Resolved via input: ${ETL_PATH}"
              exit 0
            else
              echo "Provided etl_path='${ETL_PATH}' does not exist in WORKDIR='${WORKDIR:-.}'" >&2
              exit 2
            fi
          fi

          # 2) Auto-discovery common locations
          CANDIDATES=(
            "scripts/etl.py"
            "etl.py"
            "etl/etl.py"
            "etl/main.py"
            "src/etl.py"
            "src/etl/main.py"
          )
          for c in "${CANDIDATES[@]}"; do
            if [ -f "$c" ]; then
              echo "ETL_FILE=$c" >> "$GITHUB_ENV"
              echo "Resolved via auto-discovery: $c"
              exit 0
            fi
          done

          # 3) Last resort: grep for any etl.py
          FOUND="$(git ls-files | grep -E '(^|/)etl\.py$' | head -n 1 || true)"
          if [ -n "$FOUND" ] && [ -f "$FOUND" ]; then
            echo "ETL_FILE=$FOUND" >> "$GITHUB_ENV"
            echo "Resolved via git index: $FOUND"
            exit 0
          fi

          echo "etl.py not found; pass etl_path input or place script in a standard location" >&2
          exit 2

      - name: Run ETL
        shell: bash
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          set -euo pipefail
          test -n "${POLYGON_API_KEY:-}" || { echo "POLYGON_API_KEY is not set"; exit 1; }
          cd "${WORKDIR:-.}"
          python "${ETL_FILE}"
