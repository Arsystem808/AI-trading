name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: pip-${{ runner.os }}-
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install black flake8
      - name: Lint (soft)
        run: |
          set -e
          paths=(scripts services core/strategy.py)
          found=0
          for p in "${paths[@]}"; do [ -e "$p" ] && found=1; done
          if [ "$found" -eq 1 ]; then
            black --check --diff "${paths[@]}" || true
            flake8 "${paths[@]}" || true
          else
            echo "No lint targets"
          fi

  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Detect tests
        id: detect
        shell: bash
        run: |
          if git ls-files 'tests/**/*.py' | grep -q .; then
            echo "HAS_TESTS=true" >> "$GITHUB_ENV"
          else
            echo "HAS_TESTS=false" >> "$GITHUB_ENV"
          fi
      - name: Install deps
        if: env.HAS_TESTS == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Run tests
        if: env.HAS_TESTS == 'true'
        run: pytest -q
      - name: Skip note
        if: env.HAS_TESTS != 'true'
        run: echo "No tests found, skipping"
