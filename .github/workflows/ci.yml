name: CI

on:
  push:
    branches: [ main, master ]
    paths:
      - "**.py"
      - "**.toml"
      - ".flake8"
      - ".streamlit/**"
      - "requirements*.txt"
      - ".github/workflows/**"
      - "docs/**"
  pull_request:
    branches: [ main, master ]
    paths:
      - "**.py"
      - "**.toml"
      - ".flake8"
      - ".streamlit/**"
      - "requirements*.txt"
      - ".github/workflows/**"
      - "docs/**"
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: CI / lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install black flake8
      - name: Lint (soft)
        run: |
          # Чекаем весь репозиторий, но временно исключаем проблемный файл
          BLACK_EXCL='(^|/)(jobs/calibrate\.py)($|/)'
          black --check --diff . \
            --force-exclude "$BLACK_EXCL" \
            --exclude '(^|/)(\.git|\.venv|venv|build|dist|__pycache__)($|/)' || true

          # flake8 тоже мягко и с исключениями служебных директорий и файла
          flake8 . --exclude=".git,.venv,venv,build,dist,__pycache__,jobs/calibrate.py" || true

  typecheck:
    name: CI / typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install mypy
      - name: mypy
        run: |
          # Ожидается, что в mypy.ini уже есть exclude для jobs/calibrate.py
          mypy . --pretty --show-error-codes

  test:
    name: CI / test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
      - name: Detect tests
        run: |
          if git ls-files "tests/*.py" "tests/**/*.py" | grep -q .; then
            echo "HAS_TESTS=true" >> "$GITHUB_ENV"
          else
            echo "HAS_TESTS=false" >> "$GITHUB_ENV"
          fi
      - name: Install deps
        if: env.HAS_TESTS == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Run tests (soft)
        if: env.HAS_TESTS == 'true'
        continue-on-error: true
        run: pytest -q
      - name: Skip note
        if: env.HAS_TESTS != 'true'
        run: echo "No tests found, skipping"

